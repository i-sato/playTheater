/*
 * PlayTheater.core
 * build.gradle
 * Created by Isato on 19/12/2021 8:43:11
 * Source code available on: https://github.com/i-sato/PlayTheater
 * Copyright (c) 2021. All rights reserved.
 */

plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
}
apply from: '../shared_dependencies.gradle'

android {
    compileSdk 31

    defaultConfig {
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro", "glide.pro", "gson.pro", "retrofit.pro", "sqlcipher.pro", "okio.pro"

        def BASE_URL = "https://api.themoviedb.org/3/"
        def BASE_IMAGE_URL = "https://image.tmdb.org/t/p/original"
        buildConfigField "String", "API_URL", "\"$BASE_URL\""
        buildConfigField "String", "API_KEY_QUERY", "\"?api_key=$API_KEY\""
        buildConfigField "String", "BASE_IMAGE_URL", "\"$BASE_IMAGE_URL\""
        buildConfigField "String", "DB_KEY", "\"$DB_KEY\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    //noinspection DifferentStdlibGradleVersion
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"

    // Lifecycle
    api "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Retrofit
    def logging_interceptor_version = '4.9.0'
    def retrofit_version = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_interceptor_version"

    // Room
    def room_version = '2.4.0'
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"

    // SQLCipher
    def sqlcipher_version = '4.4.0'
    def sqlite_ktx_version = '2.2.0'
    implementation "net.zetetic:android-database-sqlcipher:$sqlcipher_version"
    implementation "androidx.sqlite:sqlite-ktx:$sqlite_ktx_version"

}